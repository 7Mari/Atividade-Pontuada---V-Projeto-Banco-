#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>
#include <time.h>
#include <windows.h>

struct dados_cadastros
{
    char nome[200];
    char data[10];
    char agencia[4];
    char cpf[14];
    char sobrenome[200];
    float saldo;
    float dinheiroDepositado;
    float dinheiroRetirado;
    float dinheiroEmprestimo;
};

void cadastrar (struct dados_cadastros *cadastros){
    int contadorCadastro;
    int i;
    fflush(stdin);
    printf("Insira seu nome: \n");
    gets(cadastros[i].nome);
    printf("_________________________________\n");

    printf("\nInsira seu sobrenome: \n");
    gets(cadastros[i].sobrenome);
    printf("_________________________________\n");

    printf("\nInsira sua data de nascimento: \n");
    gets(cadastros[i].data);
    printf("_________________________________\n");

     printf("\nInsira seu CPF: \n");
    gets(cadastros[i].cpf);
    printf("_________________________________\n");
            
    printf("\nInsira o número da agência do seu cartão: \n");
    gets(cadastros[i].agencia);
    printf("_________________________________\n");

    printf("Insira a quantidade de saldo: \n");
    scanf("%f" ,&cadastros[i].saldo);       
}

void depositarEsacar(struct dados_cadastros *cadastros){
    int codigo2;
    int i;
    float deposito = 0;
    float sacar = 0;

    printf("______________________________________________\n");
    printf("(1) Depositar Dinheiro\n");
    printf("(2) Sacar Dinheiro\n");
    printf("Escolha uma das opções acima: \n");
    scanf("%d" ,&codigo2);

    limpatela();
    fflush(stdin);
        switch (codigo2)
        {
        case 1:
            printf("Digite a quantidade de dinheiro que deseja depositar: \n");
            scanf("%f" ,&cadastros[i].dinheiroDepositado);
            limpatela();

            deposito = cadastros[i].dinheiroDepositado + cadastros[i].saldo;
            titulo(cadastros);
			printf("\n-|Total de dinheiro depositado: R$%.3f\n" ,cadastros[i].dinheiroDepositado );
            printf("-|Quantidade Total do Saldo após o deposito: R$%.3f \n" ,deposito);
            depositar(cadastros);
            printf("\n \n \n");
            
            break;

        case 2:
            printf("Digite a quantidade de dinheiro que deseja retirar: \n");
            scanf("%f" ,&cadastros[i].dinheiroRetirado);
            limpatela();

            sacar = cadastros[i].saldo - cadastros[i].dinheiroRetirado;
            titulo(cadastros);
            printf("\n-|Total de dinheiro retirado: R$%.3f\n" ,cadastros[i].dinheiroRetirado );
            printf("\n-|Quantidade Total do Saldo após a retirada de dinheiro: R$%.3f \n" ,sacar);
            if(sacar < 0){
                printf("\t-|Saldo negativo na conta!\n");
                printf("\t-|Você terá 10 dias para resolver a situação-\n");
            }
            
            printf("\n \n \n");
            break;
        
        default:
        printf("Opção inválida!\n");
            break;
        }
}

void fazer_emprestimo(struct dados_cadastros *cadastros){
    int i;

    printf("\t\n---Empréstimo--\n");
    printf("\t\nMáximo de R$20.000\n");
    printf("\t\nMinímo de R$100\n");
    printf("--------------------------------------------\n");
    printf("Informe a quantidade de dinheiro que desejar: \n");
    scanf("%f" ,&cadastros[i].dinheiroEmprestimo);

    if (cadastros[i].dinheiroEmprestimo >= 20000)
    {
        printf("o valor atingiu o limite");
    }
    
}

int main(){
    setlocale(LC_ALL ,"portuguese");
struct dados_cadastros cadastros[999];

    int codigo;
    int contadorCadastro;
    int i;
    
    do
    {
        printf("\n\t---Sistema de Gestão Financeira---\n");
        printf("[1] |-Cadastrar-|\n");
        printf("[2] |-Depositar ou Retirar dinheiro-|\n");
        printf("[3] |-Mostrar Dados Cadastrados-|\n");
        printf("[4] |-Empréstimo-|\n");
        printf("[5] |-Sair do Sistema-|\n");
        printf("------------------------------------------------\n");
        printf("Escolha uma das opções acima: \n");
        scanf("%d" ,&codigo);

        switch (codigo)
        {
        case 1:
            cadastrar(cadastros);
            contadorCadastro++;
            limpatela();
            break;

        case 2:
            depositarEsacar(cadastros);
            break;

        case 3:
        limpatela();
            printf("\n\t--Pessoas Cadastradas--\n");

            if (codigo == 1)
            {
               contadorCadastro++;
            } else {
                printf("--Nenhuma Pessoa foi cadastrada.\n");
            }
            
            for ( i = 0; i < contadorCadastro; i++)
            {
                printf("Nome: %s  %s \n" ,cadastros[i].nome ,cadastros[i].sobrenome);
                printf(".................................................................\n");
            }

            break;

        case 4:

            break;

        case 5:
        limpatela();
            printf("Encerrando sistema");
            printf("." ,sleep(1));
            printf("." ,sleep(1));
            printf(".\n" ,sleep(1));
        limpatela();

        HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
        CONSOLE_SCREEN_BUFFER_INFO consoleInfo;
        WORD saved_attributes;

        /* Salvar estado atual */
        GetConsoleScreenBufferInfo(hConsole, &consoleInfo);
        saved_attributes = consoleInfo.wAttributes;

        SetConsoleTextAttribute(hConsole, FOREGROUND_GREEN);

            printf("Obrigado por visitar nosso site!\n");
            printf("Seja sempre Bem-Vindo(a)\n");

        SetConsoleTextAttribute(hConsole, saved_attributes);

            break;
        
        default:
        printf("Opção Inválida!");
            break;
        }
    } while (codigo != 5);
    

    return 0;
}
